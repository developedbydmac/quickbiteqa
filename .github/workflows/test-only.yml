name: Test Suite

on:
  pull_request:
    branches: [ main ]
  workflow_dispatch:

env:
  SITE_BASE: http://quickbite-blue.s3-website-us-east-1.amazonaws.com
  API_BASE: https://vhhkqwkf0l.execute-api.us-east-1.amazonaws.com/dev
  TEST_USER: email@example.com
  TEST_PASS: Password123

jobs:
  test:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [18.x, 20.x]

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Setup Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Install Cypress dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y libgtk2.0-0 libgtk-3-0 libgbm-dev libnotify-dev libgconf-2-4 libnss3 libxss1 libasound2 libxtst6 xauth xvfb

    - name: Run API tests
      run: npm run test:api
      env:
        API_BASE: ${{ env.API_BASE }}
        TEST_USER: ${{ env.TEST_USER }}
        TEST_PASS: ${{ env.TEST_PASS }}

    - name: Run Cypress tests
      run: npm run cypress:run
      env:
        SITE_BASE: ${{ env.SITE_BASE }}
        TEST_USER: ${{ env.TEST_USER }}
        TEST_PASS: ${{ env.TEST_PASS }}
        CYPRESS_baseUrl: ${{ env.SITE_BASE }}

    - name: Upload Cypress screenshots
      uses: actions/upload-artifact@v4
      if: failure()
      with:
        name: cypress-screenshots-${{ matrix.node-version }}
        path: cypress/screenshots
        retention-days: 30

    - name: Upload Cypress videos
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: cypress-videos-${{ matrix.node-version }}
        path: cypress/videos
        retention-days: 30

    - name: Upload test results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: test-results-${{ matrix.node-version }}
        path: |
          cypress/reports
          test-results.json
        retention-days: 30

  test-summary:
    runs-on: ubuntu-latest
    needs: test
    if: always()
    
    steps:
    - name: Test Summary
      run: |
        echo "## Test Suite Results 🧪" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "| Test Type | Status |" >> $GITHUB_STEP_SUMMARY
        echo "|-----------|--------|" >> $GITHUB_STEP_SUMMARY
        echo "| API Tests | ${{ needs.test.result == 'success' && '✅ Passed' || '❌ Failed' }} |" >> $GITHUB_STEP_SUMMARY
        echo "| UI Tests  | ${{ needs.test.result == 'success' && '✅ Passed' || '❌ Failed' }} |" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "### Test Environment" >> $GITHUB_STEP_SUMMARY
        echo "- **Frontend**: ${{ env.SITE_BASE }}" >> $GITHUB_STEP_SUMMARY
        echo "- **Backend**: ${{ env.API_BASE }}" >> $GITHUB_STEP_SUMMARY
        echo "- **Node.js**: 18.x, 20.x" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        if [[ "${{ needs.test.result }}" != "success" ]]; then
          echo "### 🔍 Troubleshooting" >> $GITHUB_STEP_SUMMARY
          echo "- Check uploaded artifacts for screenshots and videos" >> $GITHUB_STEP_SUMMARY
          echo "- Verify test environment URLs are accessible" >> $GITHUB_STEP_SUMMARY
          echo "- Review test logs for specific failure details" >> $GITHUB_STEP_SUMMARY
        fi
