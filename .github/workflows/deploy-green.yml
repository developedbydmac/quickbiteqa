name: Deploy to Green Environment

on:
  workflow_dispatch:
    inputs:
      promote_to_production:
        description: 'Promote Green to Production after successful deployment'
        required: false
        default: 'false'
        type: choice
        options:
        - 'true'
        - 'false'

env:
  NODE_VERSION: '18'
  AWS_REGION: ${{ secrets.AWS_REGION }}

jobs:
  deploy-green:
    runs-on: ubuntu-latest
    environment: green
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Build frontend
      run: npm run build
      env:
        NODE_ENV: production

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ env.AWS_REGION }}

    - name: Deploy to S3 Green bucket
      run: |
        aws s3 sync dist/ s3://quickbite-green --delete --cache-control "max-age=86400"
        echo "🚀 Deployed to Green environment: http://quickbite-green.s3-website-us-east-1.amazonaws.com"

    - name: Run Cypress smoke tests
      uses: cypress-io/github-action@v6
      with:
        spec: cypress/e2e/quickbite_smoke_ci.cy.js
        wait-on: ${{ secrets.SITE_BASE_GREEN }}
        wait-on-timeout: 120
      env:
        CYPRESS_SITE_BASE: ${{ secrets.SITE_BASE_GREEN }}
        CYPRESS_API_BASE: https://vhhkqwkf0l.execute-api.us-east-1.amazonaws.com/dev
        CYPRESS_TEST_USER: ${{ secrets.TEST_USER }}
        CYPRESS_TEST_PASS: ${{ secrets.TEST_PASS }}

    - name: Upload Cypress screenshots
      uses: actions/upload-artifact@v4
      if: failure()
      with:
        name: cypress-screenshots-green
        path: cypress/screenshots
        retention-days: 7

    - name: Upload Cypress videos
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: cypress-videos-green
        path: cypress/videos
        retention-days: 7

    - name: Upload test results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: cypress-results-green
        path: |
          cypress/reports
          cypress/results
        retention-days: 7

    - name: Green deployment summary
      run: |
        echo "## 🟩 Green Deployment Complete" >> $GITHUB_STEP_SUMMARY
        echo "- **Environment**: Green (Staging)" >> $GITHUB_STEP_SUMMARY
        echo "- **URL**: http://quickbite-green.s3-website-us-east-1.amazonaws.com" >> $GITHUB_STEP_SUMMARY
        echo "- **Build**: $(date -u '+%Y-%m-%d %H:%M:%S UTC')" >> $GITHUB_STEP_SUMMARY
        echo "- **Commit**: ${{ github.sha }}" >> $GITHUB_STEP_SUMMARY
        echo "- **Tests**: Smoke tests completed ✅" >> $GITHUB_STEP_SUMMARY

  promote:
    needs: deploy-green
    runs-on: ubuntu-latest
    environment: production
    if: github.event.inputs.promote_to_production == 'true'
    
    steps:
    - name: Manual approval required
      run: |
        echo "🔒 Manual approval required for production promotion"
        echo "This job requires manual approval in the GitHub Actions UI"
        echo "Review the green deployment before approving"

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ env.AWS_REGION }}

    - name: Update Route53 to point to Green
      run: |
        echo "🔄 Updating DNS routing to Green environment"
        # Note: This would update Route53 hosted zone to point to green bucket
        # For S3 static hosting, we'll update the primary bucket pointer
        
        # Create a backup of current blue state
        echo "Creating backup reference to blue environment"
        aws s3api put-object --bucket quickbite-config --key "previous-production" --body <(echo "blue-$(date +%Y%m%d-%H%M%S)")
        
        # Log the promotion
        echo "Promoted Green to Production at $(date -u '+%Y-%m-%d %H:%M:%S UTC')"
        
        # In a real scenario, this would update:
        # - CloudFront distribution origin
        # - Route53 alias record
        # - Load balancer target groups
        echo "✅ Production traffic now routing to Green environment"

    - name: Verify production switch
      run: |
        echo "🔍 Verifying production environment switch"
        # Wait a moment for DNS propagation
        sleep 30
        
        # Test the production endpoint
        curl -f ${{ secrets.SITE_BASE_GREEN }} || echo "⚠️ Verification failed - manual check required"
        
        echo "✅ Production switch verification complete"

    - name: Promotion summary
      run: |
        echo "## 🚀 Production Promotion Complete" >> $GITHUB_STEP_SUMMARY
        echo "- **Status**: Green environment promoted to production" >> $GITHUB_STEP_SUMMARY
        echo "- **Previous**: Blue environment (backed up)" >> $GITHUB_STEP_SUMMARY
        echo "- **Current**: Green environment serving production traffic" >> $GITHUB_STEP_SUMMARY
        echo "- **Promoted**: $(date -u '+%Y-%m-%d %H:%M:%S UTC')" >> $GITHUB_STEP_SUMMARY
        echo "- **Rollback**: Available via manual workflow dispatch" >> $GITHUB_STEP_SUMMARY

    - name: Notify deployment success
      run: |
        echo "📧 Production deployment notification sent"
        echo "Green environment is now serving production traffic"
